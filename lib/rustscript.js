const parsers = require('./parser');const contexts = require('./context');    function Range(from, to) {    let value = from;        this.hasNext = function () { return value >= from && value <= to; };    this.next = function () { return value++; }}    function createRange(from, to) {    return new Range(from, to);}function compile(text, context) {    const parser = parsers.createParser(text);        const result = parser.parse('Program');        return result.value.evaluate(context);};function createContext() {    const ctx = contexts.createContext();        ctx.defineLocalValue('println!', console.log);    ctx.defineLocalValue('range', createRange);    return ctx;}module.exports = {    createContext: createContext,    compile: compile};